name: "build-on-push"
on: [push]

jobs:
  test-tauri:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest] #, ubuntu-20.04, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:

      - name: Get version
        run: echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Get short sha
        run: echo "SHA_SHORT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Get target
        if: matrix.platform == 'macos-latest'
        run: echo "RUST_TARGET=x86_64-apple-darwin" >> $GITHUB_ENV

      - name: Get target
        if: matrix.platform == 'ubuntu-20.04'
        run: echo "RUST_TARGET=x86_64-unknown-linux-musl" >> $GITHUB_ENV

      - name: Get target
        if: matrix.platform == 'windows-latest'
        run: echo "RUST_TARGET=x86_64-pc-windows-msvc" >> $GITHUB_ENV

      - name: Get package name
        run: echo "PACKAGE_NAME=cyto-snap-${process.env.PACKAGE_VERSION}-${process.env.SHA_SHORT}-${process.env.RUST_TARGET}" >> $GITHUB_ENV

      - name: Pack executable
        run: |
          mkdir -p bins/${process.env.PACKAGE_NAME}
          cp src-tauri/target/release/cyto-snap* bins/${process.env.PACKAGE_NAME}
          tar -C bins -czvf ${process.env.PACKAGE_NAME}.tar.gz ${process.env.PACKAGE_NAME}

      - uses: actions/checkout@v3

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        # You can remove libayatana-appindicator3-dev if you don't use the system tray feature.
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Sync node version and setup cache
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
          cache: "pnpm"

      - name: Install frontend dependencies
        run: pnpm install --frozen-lockfile

      - name: Build the app
        run: pnpm tauri build

      # - name: Build the app
      #   uses: tauri-apps/tauri-action@v0

      - uses: actions/upload-artifact@v3
        with:
          name: process.env.PACKAGE_NAME
          path: process.env.PACKAGE_NAME
          if-no-files-found: error
